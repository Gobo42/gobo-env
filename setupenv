#!/usr/bin/env bash

#If you get \033 \033 errors on noninteractive shells, then this is missing from the beginning of your .bashrc file
#case $- in
#    *i*) ;;
#      *) return;;
#esac

#if .bashrc isn't running this is missing from .profile
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
    . "$HOME/.bashrc"
    fi
fi

#install neofetch
cp neofetch /usr/local/bin/neofetch

if ! grep -q bash_aliases ~/.bashrc; then
    echo "" >> ~/.bashrc
    echo "if [ -f ~/.bash_aliases ]; then" >> ~/.bashrc
    echo "    . ~/.bash_aliases" >> ~/.bashrc
    echo "fi" >> ~/.bashrc
    echo "" >> ~/.bashrc
fi
[ -z "$(grep "histappend" ~/.bashrc)" ] && echo "shopt -s histappend" >> ~/.bashrc
[ -z "$(grep "HISTSIZE" ~/.bashrc)" ] && echo "HISTSIZE=1000" >> ~/.bashrc
[ -z "$(grep "HISTFILESIZE" ~/.bashrc)" ] && echo "HISTFILESIZE=2000" >> ~/.bashrc
[ -z "$(grep "checkwinsize" ~/.bashrc)" ] && echo "shopt -s checkwinsize" >> ~/.bashrc
[ -z "$(grep "tabs" ~/.bashrc)" ] && echo "tabs 4" >> ~/.bashrc
[ -z "$(grep "GCC_COLORS" ~/.bashrc)" ] && echo "export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'" >> ~/.bashrc
[ -z "$(grep -P "^\s*PS1=" ~/.bashrc)" ] && echo 'PS1="(\[\033[01;34m\]\t\[\033[0m\])\[\033[38;5;10m\]\u\[\033[0m\]@\[\033[38;5;10m\]\h\[\033[0m\]:[\[\033[38;5;1m\]\w\[\033[0m\]]\$"' >> ~/.bashrc
# new: PS1="(\[\033[01;34m\]\t\[\033[0m\])\[\033[38;5;10m\]\u\[\033[0m\]@\[\033[38;5;10m\]\h\[\033[0m\]:[\[\033[38;5;1m\]\w\[\033[0m\]]\$"
#old "PS1=\"\[\033[38;5;10m\]\u\[\033[0m\]@\[\033[38;5;10m\]\h\[\033[0m\]:[\[\033[38;5;1m\]\w\[\033[0m\]]\$\"" >> ~/.bashrc
# this is the actual string: PS1="\[\033[38;5;10m\]\u\[\033[0m\]@\[\033[38;5;10m\]\h\[\033[0m\]:[\[\033[38;5;1m\]\w\[\033[0m\]]$"
[ -x "$(command -v neofetch)" ] && [ -z "$(grep "neofetch" ~/.bashrc)" ] && echo "if [ -t 0 ]; then neofetch; fi" >> ~/.bashrc

[ ! -f "~/.bash_aliases" ] && touch ~/.bash_aliases
[ -z "$(grep "vi=vim" ~/.bash_aliases)" ] && echo "alias vi=vim" >> ~/.bash_aliases
[ -z "$(grep "sudo='sudo" ~/.bash_aliases)" ] && echo "alias sudo='sudo '" >> ~/.bash_aliases
[ -z "$(grep "grep='grep --color=auto" ~/.bash_aliases)" ] && echo "alias grep='grep --color=auto'" >> ~/.bash_aliases
[ -z "$(grep "ls='ls --color=auto'" ~/.bash_aliases)" ] && echo "ls='ls --color=auto'" >> ~/.bash_aliases
[ -z "$(grep "bat='bat -pP'" ~/.bash_aliases)" ] && echo "bat='bat -pP'" >> ~/.bash_aliases
[ -z "$(grep "less='less -rS --use-color --incsearch -~'" ~/.bash_aliases)" ] && echo "less='less -rS --use-color --incsearch -~'" >> ~/.bash_aliases


#fix screwup from earlier
[[ $EUID -eq 0 ]] && [ -f "/etc/sudoers.d/gobo" ] && [ ! -z "$(grep "root" /etc/sudoers.d/gobo)" ] && sed -i "s/root/${SUDO_USER:-$USER}/" /etc/sudoers.d/gobo
[[ $EUID -eq 0 ]] && [ -d "/etc/sudoers.d" ] && [ ! -f "/etc/sudoers.d/gobo" ] && echo "${SUDO_USER:-$USER}    ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/gobo

#fix dnf
[ -z "$(grep "fastestmirror" /etc/dnf/dnf.conf)" ] && echo "fastestmirror=True" >> /etc/dnf/dnf.conf
[ -z "$(grep "max_parallel_downloads" /etc/dnf/dnf.conf)" ] && echo "max_parallel_downloads=5" >> /etc/dnf/dnf.conf

#now install stuff
dnf -y update && dnf -y install vim bind-utils

#fix .vimrc
[ ! -f "~/.vimrc" ] && touch ~/.vimrc
[ -z "$(grep "\$VIMRUNTIME" ~/.vimrc)" ] && echo "source \$VIMRUNTIME/defaults.vim" >> ~/.vimrc
[ -z "$(grep "mouse-=a" ~/.vimrc)" ] && echo "set mouse-=a" >> ~/.vimrc
[ -z "$(grep "tabstop=4" ~/.vimrc)" ] && echo "set tabstop=4" >> ~/.vimrc
[ -z "$(grep "shiftwidth=4" ~/.vimrc)" ] && echo "set shiftwidth=4" >> ~/.vimrc
[ -z "$(grep "expandtab" ~/.vimrc)" ] && echo "set expandtab" >> ~/.vimrc
[ -z "$(grep "smarttab" ~/.vimrc)" ] && echo "set smarttab" >> ~/.vimrc
[ -z "$(grep "autoindent" ~/.vimrc)" ] && echo "set autoindent" >> ~/.vimrc
[ -z "$(grep "smartindent" ~/.vimrc)" ] && echo "set smartindent" >> ~/.vimrc
[ -z "$(grep "wrap" ~/.vimrc)" ] && echo "set wrap" >> ~/.vimrc
[ -z "$(grep "magic" ~/.vimrc)" ] && echo "set magic" >> ~/.vimrc
[ -z "$(grep "hidden" ~/.vimrc)" ] && echo "set hidden" >> ~/.vimrc
[ -z "$(grep "showmatch" ~/.vimrc)" ] && echo "set showmatch" >> ~/.vimrc
[ -z "$(grep "nnoremap <C-L>" ~/.vimrc)" ] && echo "nnoremap <C-L> :nohl<cr><C-L>" >> ~/.vimrc

. ~/.bashrc
